<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <!-- 等效于之前的配置，必须要使用监听器才能监听到
  	listener 和 context-param 配合使用，缺一不可
   -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring/ApplicationContext.xml</param-value>
  </context-param>
  
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
  </context-param>
  
  <!-- 
  	过滤器： 执行链   一个过滤器的执行链上会存在多个过滤器顺序执行
  		url 过滤是过滤器最常用的使用方式
   -->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
  </filter>
  
  <servlet>
    <servlet-name>springMvc</servlet-name>
        <!-- 前台控制器DispatcherServlet-->
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring/ApplicationContext-mvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springMvc</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>
  
  <filter>
    <filter-name>loginFilter</filter-name>
    <filter-class>com.ggp.filter.LoginFilter</filter-class>
  </filter>
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <filter>
    <filter-name>startFilter</filter-name>
    <filter-class>com.ggp.filter.StartFilter</filter-class>
  </filter>
  
  <filter>
    <filter-name>DruidWebStatFilter</filter-name>
    <!-- WebStatFilter用于采集web-jdbc关联监控的数据。 -->
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <!-- 经常需要排除一些不必要的url，比如.js,/jslib/等等。配置在init-param中。 -->
    <init-param>
        <param-name>exclusions</param-name>
        <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
    </init-param>
    <!-- 缺省sessionStatMaxCount是1000个。你可以按需要进行配置 -->
<!--     <init-param> -->
<!--         <param-name>sessionStatMaxCount</param-name> -->
<!--         <param-value>1000</param-value> -->
<!--     </init-param> -->
    <!-- 你可以关闭session统计功能 -->
<!--     <init-param> -->
<!--         <param-name>sessionStatEnable</param-name> -->
<!--         <param-value>false</param-value> -->
<!--     </init-param> -->
	<!-- 配置principalSessionName，使得druid能够知道当前的session的用户是谁 
		 根据需要，把其中的xxx.user修改为你user信息保存在cookie中的cookieName
	-->
<!-- 	<init-param> -->
<!--         <param-name>principalSessionName</param-name> -->
<!--         <param-value>xxx.user</param-value> -->
<!--     </init-param> -->
  </filter>
  
  <context-param>  
    <param-name>spring.profiles.active</param-name>  
    <param-value>dev</param-value>  
  </context-param>  
  <context-param>  
    <param-name>spring.profiles.default</param-name>  
    <param-value>dev</param-value>  
  </context-param>
  <context-param>  
    <param-name>spring.liveBeansView.mbeanDomain</param-name>  
    <param-value>dev</param-value>  
  </context-param> 
  
  	<welcome-file-list>  
   		 <welcome-file>./WEB-INF/jsp/login/Login.jsp</welcome-file>  
	</welcome-file-list>  
	
	<error-page>
	    <error-code>403</error-code>
	    <location>/WEB-INF/jsp/error/403.jsp</location>
	</error-page>
	<error-page>
	    <error-code>404</error-code>
	    <location>/WEB-INF/jsp/error/404.jsp</location>
	</error-page>
	<error-page>
	    <error-code>500</error-code>
	    <location>/WEB-INF/jsp/error/500.jsp</location>
	</error-page>
</web-app>
